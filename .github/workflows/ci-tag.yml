on:
  push:
    tags:
      - 'v*'

name: ci-tag

env:
  DOTNET_VERSION: 7.0.x
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/shocklink-api

jobs:

  build-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup .NET SDK ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal
      
      - name: Dotnet Publish
        run: dotnet publish API/API.csproj -c Release -o ./publish
      
      - name: Upload full artifacts
        uses: actions/upload-artifact@v3
        with:
          name: full-dotnet-app
          path: publish/*
          retention-days: 1
          if-no-files-found: error
      
      - name: Upload internal artifacts
        uses: actions/upload-artifact@v3
        with:
          name: only-shocklink-dlls
          path: publish/ShockLink.*.dll
          retention-days: 1
          if-no-files-found: error

  build-container:
    runs-on: ubuntu-latest
    needs: build-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: full-dotnet-app
          path: publish/

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: oprypin/find-latest-tag@v1
        id: latest-tag
        with:
          repository: ${{ github.repository }}
          releases-only: false
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enabled=${{ steps.latest-tag.outputs.tag == github.ref_name }}
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    runs-on: ubuntu-latest
    needs: build-container

    steps:
      - name: Download release notes
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            README.md
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: README.md
          tag_name: ${{ github.ref }}
