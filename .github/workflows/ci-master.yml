on:
  push:
    branches:
      - master
      - develop
      - feature/live-control-ci
  pull_request:
    branches:
      - master
      - develop
    types: [opened, reopened, synchronize]

name: ci-build

env:
  BRANCH: ${{ github.ref_name }}
  DOTNET_VERSION: 7.0.x
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/api

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [API, LiveControlGateway]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup .NET SDK ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal
      
      - name: Publish API
        run: dotnet publish API/API.csproj -c Release -o ./publish/API
      
      - name: Publish LiveControlGateway
        run: dotnet publish LiveControlGateway/LiveControlGateway.csproj -c Release -o ./publish/LiveControlGateway
      
      - name: Upload full artifacts
        uses: actions/upload-artifact@v3
        with:
          name: API
          path: publish/API/*
          retention-days: 1
          if-no-files-found: error
      
      - name: Upload LiveControlGateway app
        uses: actions/upload-artifact@v3
        with:
          name: LiveControlGateway
          path: publish/API/*
          retention-days: 1
          if-no-files-found: error
      
  containerize:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        project: [API, LiveControlGateway]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            ${{ matrix.project }}.Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.project }}
          path: publish/

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{branch}},enable=${{ github.ref_name == env.BRANCH }}
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.project }}.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # publish:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Download release notes
  #       uses: actions/checkout@v4
  #       with:
  #         sparse-checkout: |
  #           RELEASE.md

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: artifacts